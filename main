const { Command } = require('commander');
const fs = require('fs');

const program = new Command();

program
  .option('-i, --input <file>', 'Input file path (required)')
  .option('-o, --output <file>', 'Output file path')
  .option('-d, --display', 'Display result in console')
  .option('-s, --survived', 'Show only survivors')
  .option('-a, --age', 'Show passenger age');


program.parse();

const options = program.opts();

if (!options.input) {
  console.error('Please, specify input file');
  process.exit(1);
}

// Перевірка чи файл існує
if (!fs.existsSync(options.input)) {
  console.error('Cannot find input file');
  process.exit(1);
}

const data = fs.readFileSync(options.input, 'utf8');
const lines = data.split('\n').filter(line => line.trim());
let jsonData = lines.map(line => JSON.parse(line)); //Перетворюємо кожен рядок з JSON тексту в JavaScript об'єкт

if (options.survived) {
  jsonData = jsonData.filter(passenger => passenger.Survived === "1");
}

const result = {
  passengers: jsonData.map(passenger => {
    const output = {
      name: passenger.Name,
      ticket: passenger.Ticket
    };
    
    if (options.age) {
      output.age = passenger.Age;
    }
    
    return output;
  })
};

// Форматування виводу
function formatOutput(passengers, showAge) {
  return passengers.map(p => {
    if (showAge) {
      return `${p.name} ${p.age} ${p.ticket}`;
    } else {
      return `${p.name} ${p.ticket}`;
    } 2   
  }).join('\n');
}

// Вивід результатів
if (options.output) {
  const textOutput = formatOutput(result.passengers, options.age);
  fs.writeFileSync(options.output, textOutput);
}

if (options.display) {
  console.log(formatOutput(result.passengers, options.age));
}